// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_hello
List rcpp_hello();
RcppExport SEXP _rasenna_rcpp_hello() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello());
    return rcpp_result_gen;
END_RCPP
}
// resample
List resample(NumericVector t, double freq, double th_low, double th_high);
RcppExport SEXP _rasenna_resample(SEXP tSEXP, SEXP freqSEXP, SEXP th_lowSEXP, SEXP th_highSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< double >::type freq(freqSEXP);
    Rcpp::traits::input_parameter< double >::type th_low(th_lowSEXP);
    Rcpp::traits::input_parameter< double >::type th_high(th_highSEXP);
    rcpp_result_gen = Rcpp::wrap(resample(t, freq, th_low, th_high));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rasenna_rcpp_hello", (DL_FUNC) &_rasenna_rcpp_hello, 0},
    {"_rasenna_resample", (DL_FUNC) &_rasenna_resample, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_rasenna(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
